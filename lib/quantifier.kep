/**
 * @fileOverview Stream quantifiers.
 */
package (
    any
    every)
with
    import './stream' {isEmpty first rest}
in {

/**
 * Tests a stream against a predicate and returns if the predicate is satisfied
 * for any element.
 * 
 * Succeeds fast. May stall on an infinite stream if predicate is never satisfied.
 * 
 * @param {function(value): boolean} pred Predicate function that tests
 *     values from the stream.
 * * @param s Stream to test.
 * 
 * @return Was the predicate satisfied for any element?
 */
any = \pred s -> {
    for (var current = s; !isEmpty current; current = rest current) 
        if (pred(first current))
            return true;
    return false;
};

/**
 * Tests a stream against a predicate and returns if the predicate is satisfied
 * for all elements.
 * 
 * Fails fast. May stall on an infinite stream if predicate is always satisfied.
 * 
 * @param {function(value): boolean} pred Predicate function that tests
 *     values from the stream.
 * * @param s Stream to test.
 * 
 * @return Was the predicate satisfied for all elements?
 */
every = \pred s -> {
    for (var current = s; !isEmpty current; current = rest current)
        if (!pred(first current))
            return false;
    return true;
};

}